// <auto-generated />
using BreadOven.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BreadOven.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BreadOven.Models.Costs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("typeOfCosts");
                });

            modelBuilder.Entity("BreadOven.Models.CostsAndDistrubutionfromitem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DistCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("CostsAndDistrubutionfromitems");
                });

            modelBuilder.Entity("BreadOven.Models.FactoryLines", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FactoryLines");
                });

            modelBuilder.Entity("BreadOven.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("EnergyReq")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HourlyOperatingRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperatingHours")
                        .HasColumnType("int");

                    b.Property<decimal>("Totalvalueofhoursdeprication")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("factoryLinesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("factoryLinesId");

                    b.ToTable("items");
                });

            modelBuilder.Entity("BreadOven.Models.ProductionLineDepreciation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductionAgeYear")
                        .HasColumnType("int");

                    b.Property<string>("ValuePercentage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("valueDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valueHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valueMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("valueYear")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ProductionLineDepreciations");
                });

            modelBuilder.Entity("BreadOven.Models.UnitProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("OperatingHoursQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("costsId")
                        .HasColumnType("int");

                    b.Property<int>("unitNumber")
                        .HasColumnType("int");

                    b.Property<string>("unitType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("costsId");

                    b.ToTable("unitProductions");
                });

            modelBuilder.Entity("BreadOven.Models.CostsAndDistrubutionfromitem", b =>
                {
                    b.HasOne("BreadOven.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("BreadOven.Models.Item", b =>
                {
                    b.HasOne("BreadOven.Models.FactoryLines", "FactoryLines")
                        .WithMany()
                        .HasForeignKey("factoryLinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FactoryLines");
                });

            modelBuilder.Entity("BreadOven.Models.UnitProduction", b =>
                {
                    b.HasOne("BreadOven.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BreadOven.Models.Costs", "Costs")
                        .WithMany()
                        .HasForeignKey("costsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Costs");

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
